# discover { #kedro_tdda.cli.discover }

```python
cli.discover(dataset_name=None, env=DEFAULT_ENV_TDDA, overwrite=None)
```

The tdda discover command generates constraints for data, 
and saves the generated constraints as a yaml file.

## Parameters {.doc-section .doc-section-parameters}

| Name         | Type             | Description                                                                                                                              | Default            |
|--------------|------------------|------------------------------------------------------------------------------------------------------------------------------------------|--------------------|
| dataset_name | Optional\[str\]  | Optional catalog name for the pandas dataset.  If not specified, discover will write constraints for every pandas dataset in the catalog | `None`             |
| env          | Optional\[str\]  | Which conf/<env>/tdda folder to write the constraints to                                                                                 | `DEFAULT_ENV_TDDA` |
| overwrite    | Optional\[bool\] | If a constraints file exists, the overwrite flag will overwrite the file.                                                                | `None`             |

## Usage {.doc-section .doc-section-usage}

```sh
kedro discover
```